/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

//import com.sun.jdi.connect.spi.Connection;
import busmanagement.Login;
import busmanagement.*;
import java.sql.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.*;


/**
 *
 * @author TranKhang
 */
public class QLChuyen extends javax.swing.JFrame {

    /**
     * Creates new form QLChuyen
     */
    
      public static String infor;
    
       public void setInfor(String infor)
    {
        this.infor = infor;
        this.inforText.setText(infor);
    }
       
       
        private boolean isDigits(String s)
    {
        if(s== null)
        {
            return false;
        }
        try{
            Float.parseFloat(s);
            return true;
        }
        catch(Exception e)
        {
            return false;
        }
        
    }
        
        
        public boolean validUnicodeVn(String name)
    {
        Pattern pattern;
        final String namePattern = "^[a-zA-ZÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂẾưăạảấầẩẫậắằẳẵặẹẻẽềềểếỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ\\s|_-]+$";
        
        pattern = Pattern.compile(namePattern);
        return pattern.matcher(name).matches();
    }
    
    
    public QLChuyen() {
        initComponents();
        jButton6.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        inforText = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jbtFix = new javax.swing.JButton();
        jbtDel = new javax.swing.JButton();
        jbtAdd = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        goTurnText = new javax.swing.JTextField();
        backTurnText = new javax.swing.JTextField();
        timeTravelText = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableMain = new javax.swing.JTable();
        btReset = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        busStopNumText = new javax.swing.JTextField();
        breakTimeText = new javax.swing.JTextField();
        costText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        startPointText = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setPreferredSize(new java.awt.Dimension(256, 720));

        jButton1.setText(" Quản lý nhân viên");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Quản lý xe bus");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Quản lý tài khoản");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("Quản lý chuyến xe");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Quản lý tuyến xe");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton8.setText("Thống kê");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText(" Đăng xuất");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        inforText.setEditable(false);
        inforText.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        inforText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        inforText.setText("this is some random text");
        inforText.setAutoscrolls(false);
        inforText.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        inforText.setEnabled(false);
        jScrollPane4.setViewportView(inforText);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Thông tin người dùng");
        jLabel1.setToolTipText("");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jButton4.setText("Phân công");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton7.setText("Quản lý vé");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );

        jbtFix.setText("Sửa");
        jbtFix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtFixActionPerformed(evt);
            }
        });

        jbtDel.setText("Xóa");
        jbtDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDelActionPerformed(evt);
            }
        });

        jbtAdd.setText("Thêm");
        jbtAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAddActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Lượt đi:");
        jLabel2.setFocusTraversalPolicyProvider(true);
        jLabel2.setPreferredSize(new java.awt.Dimension(150, 40));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Lượt về:");
        jLabel3.setPreferredSize(new java.awt.Dimension(150, 40));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Thời gian di chuyển:");
        jLabel4.setPreferredSize(new java.awt.Dimension(150, 40));

        goTurnText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        backTurnText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        timeTravelText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        timeTravelText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                timeTravelTextKeyTyped(evt);
            }
        });

        tableMain.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tableMain.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableMain.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tableMainAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tableMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMainMouseClicked(evt);
            }
        });
        tableMain.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                tableMainComponentMoved(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tableMainComponentShown(evt);
            }
        });
        jScrollPane3.setViewportView(tableMain);

        btReset.setText("Đặt lại");
        btReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btResetActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Số trạm:");
        jLabel5.setFocusTraversalPolicyProvider(true);
        jLabel5.setPreferredSize(new java.awt.Dimension(150, 40));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Thời gian giãn cách:");
        jLabel6.setPreferredSize(new java.awt.Dimension(150, 40));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Chi phí:");
        jLabel7.setPreferredSize(new java.awt.Dimension(150, 40));

        busStopNumText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        busStopNumText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                busStopNumTextKeyTyped(evt);
            }
        });

        breakTimeText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        breakTimeText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                breakTimeTextKeyTyped(evt);
            }
        });

        costText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        costText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                costTextKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Điểm bắt đầu:");
        jLabel8.setPreferredSize(new java.awt.Dimension(150, 40));

        startPointText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel17.setText("Quản lý tuyến xe");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btReset, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 648, Short.MAX_VALUE)
                                .addComponent(jbtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbtDel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbtFix, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1006, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(goTurnText, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(69, 69, 69)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(backTurnText, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(busStopNumText, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(163, 163, 163)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(breakTimeText, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(60, 60, 60)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(costText, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(509, 509, 509)
                                        .addComponent(timeTravelText, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(92, 92, 92)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(startPointText, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(28, 28, 28))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(412, 412, 412))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(goTurnText, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backTurnText, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeTravelText, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startPointText, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(busStopNumText)
                    .addComponent(costText)
                    .addComponent(breakTimeText, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtDel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtFix, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btReset, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showData(){
        try{
            //tableMain.removeAll();
            String[] arr = {"Tuyến số","Lượt đi","Lượt về","Thời gian di chuyển (h)","Số trạm", "Điểm bắt đầu","Thời gian giãn cách","Chi phí(vnd)"};
            DefaultTableModel model=  new DefaultTableModel(arr,0);
            
            Connection connection = DBConnection.getConnection();
            String query= "SELECT * FROM dbo.ROUTE";
            PreparedStatement ps = connection.prepareStatement(query);
            ResultSet rs= ps.executeQuery();
            while(rs.next()){
                Vector vt= new Vector();
                vt.add(rs.getString("route_id"));
                vt.add(rs.getString("go_turn"));
                vt.add(rs.getString("back_turn"));
                vt.add(rs.getString("time_travel"));
                vt.add(rs.getString("bus_stop_num"));
                vt.add(rs.getString("start_point"));
                vt.add(rs.getString("time_break"));
                vt.add(rs.getString("gas_cost"));
                model.addRow(vt);
    
        }
            DBConnection.closeConnection(connection);
            tableMain.setModel(model);  
        }catch(SQLException ex){
            Logger.getLogger(QLChuyen.class.getName()).log(Level.SEVERE, null, ex);
        }
        

    }
    
    private boolean checkID(){
          
        int pos= tableMain.getSelectedRow();
        String id= tableMain.getModel().getValueAt(pos, 0).toString();
          
        try{
            Connection connection = DBConnection.getConnection();
            String query= "SELECT route_id FROM dbo.BUS WHERE route_id = ?";
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, id);
            ResultSet rs= ps.executeQuery();
            while(rs.next()){
                return true;
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(QLChuyen.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }


    private void tableMainComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tableMainComponentShown
        showData();
        
    }//GEN-LAST:event_tableMainComponentShown

    private void tableMainComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tableMainComponentMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tableMainComponentMoved

    private void tableMainAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tableMainAncestorAdded
        showData();
        //jtaNoti.setText("Admin");
        jbtDel.setEnabled(false);
        jbtFix.setEnabled(false);
        
    }//GEN-LAST:event_tableMainAncestorAdded

    private void jbtAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAddActionPerformed
        
        
        if(goTurnText.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Vui lòng nhập tuyến đường lượt đi");
            goTurnText.requestFocus();
            return;
        }else if(backTurnText.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Vui lòng nhập tuyến đường lượt về");
            backTurnText.requestFocus();
            return;
        }else if(timeTravelText.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Vui lòng nhập thời gian di chuyển");
            timeTravelText.requestFocus();
            return;
        }else if(startPointText.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Vui lòng nhập điểm bắt đầu");
            timeTravelText.requestFocus();
            return;
        }else if(busStopNumText.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Vui lòng nhập số trạm");
            timeTravelText.requestFocus();
            return;
        }else if(breakTimeText.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Vui lòng nhập thời gian dãn cách");
            timeTravelText.requestFocus();
            return;
        }else if(costText.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Vui lòng nhập Chi phí");
            timeTravelText.requestFocus();
            return;
        }
        
        
        
        if(!validUnicodeVn(goTurnText.getText()))
        {
            JOptionPane.showMessageDialog(this, "Lượt đi chỉ được nhập ký tự và dấu phân cách \"-\"");
            return;
        }
        
        if(!validUnicodeVn(backTurnText.getText()))
        {
            JOptionPane.showMessageDialog(this, "Lượt đi chỉ được nhập ký tự và dấu phân cách \"-\"");
            return;
        }
        
        
        if(!isDigits(timeTravelText.getText()))
        {
            JOptionPane.showMessageDialog(this, "Thời gian di chuyển chỉ được nhập số (h)");
            return;
        }
        
        if(!validUnicodeVn(startPointText.getText()))
        {
            JOptionPane.showMessageDialog(this, "Điểm bắt đầu chỉ được nhập ký tự");
            return;
        }
        
        if(!isDigits(busStopNumText.getText()))
        {
            JOptionPane.showMessageDialog(this, "Số trạm chỉ được nhập số");
            return;
        }
        
        if(!isDigits(breakTimeText.getText()))
        {
            JOptionPane.showMessageDialog(this, "Thời gian giãn cách chỉ được nhập số (p)");
            return;
        }
        
        if(!isDigits(costText.getText()))
        {
            JOptionPane.showMessageDialog(this, "Chi phí chỉ được nhập số");
            return;
        }
        
        
            try{
                Connection connection = DBConnection.getConnection();
                String query= "INSERT INTO dbo.ROUTE(go_turn, back_turn, time_travel, start_point,bus_stop_num,time_break,gas_cost)"
                        + "VALUES(?,?,?,?,?,?,?)";
                PreparedStatement ps = connection.prepareStatement(query);
                
                ps.setString(1,goTurnText.getText());
                ps.setString(2,backTurnText.getText());
                ps.setString(3,timeTravelText.getText());
                ps.setString(4,startPointText.getText());
                ps.setString(5,busStopNumText.getText());
                ps.setString(6,breakTimeText.getText());
                ps.setString(7,costText.getText());
                
                ps.execute();
                showData();
                DBConnection.closeConnection(connection);

                goTurnText.setText("");
                backTurnText.setText("");
                timeTravelText.setText("");
                startPointText.setText("");
                busStopNumText.setText("");
                breakTimeText.setText("");
                costText.setText("");
                JOptionPane.showMessageDialog(null, "Thêm thành công.");
                
            } catch (SQLException ex) {
                Logger.getLogger(QLChuyen.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
    }//GEN-LAST:event_jbtAddActionPerformed

    private void jbtDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDelActionPerformed
        
        int result= JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa?");
        if (result==0){
            
            int pos= tableMain.getSelectedRow();
            String data= tableMain.getModel().getValueAt(pos, 0).toString();
            
            if(checkID()== true){
            JOptionPane.showMessageDialog(null, "Tuyến này đang được phân công không thể xóa!");
            goTurnText.setText("");
                backTurnText.setText("");
                timeTravelText.setText("");
                startPointText.setText("");
                busStopNumText.setText("");
                breakTimeText.setText("");
                costText.setText("");
            return;
            }else{
            try{
                Connection connection = DBConnection.getConnection();
                String query= "DELETE FROM dbo.ROUTE WHERE route_id= ?";
                PreparedStatement ps = connection.prepareStatement(query);
                ps.setString(1, data);
                ps.executeUpdate();
                showData();
                DBConnection.closeConnection(connection);
                
                JOptionPane.showMessageDialog(null, "Xóa thành công.");
                goTurnText.setText("");
                backTurnText.setText("");
                timeTravelText.setText("");
                startPointText.setText("");
                busStopNumText.setText("");
                breakTimeText.setText("");
                costText.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(QLChuyen.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        }
        else{
            goTurnText.setText("");
                backTurnText.setText("");
                timeTravelText.setText("");
                startPointText.setText("");
                busStopNumText.setText("");
                breakTimeText.setText("");
                costText.setText("");
        }
        
        jbtAdd.setEnabled(true);
        jbtDel.setEnabled(false);
        jbtFix.setEnabled(false);
    }//GEN-LAST:event_jbtDelActionPerformed

    private void tableMainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMainMouseClicked
        int pos= tableMain.getSelectedRow();
        
        goTurnText.setText(tableMain.getModel().getValueAt(pos, 1).toString());
        backTurnText.setText(tableMain.getModel().getValueAt(pos, 2).toString());
        timeTravelText.setText(tableMain.getModel().getValueAt(pos, 3).toString());
        busStopNumText.setText(tableMain.getModel().getValueAt(pos, 4).toString());
        startPointText.setText(tableMain.getModel().getValueAt(pos, 5).toString());
        breakTimeText.setText(tableMain.getModel().getValueAt(pos, 6).toString());
        costText.setText(tableMain.getModel().getValueAt(pos, 7).toString());
        
        jbtAdd.setEnabled(false);
        jbtDel.setEnabled(true);
        jbtFix.setEnabled(true);
        
    }//GEN-LAST:event_tableMainMouseClicked

    private void jbtFixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtFixActionPerformed
        
            int pos= tableMain.getSelectedRow();
            String data= tableMain.getModel().getValueAt(pos, 0).toString();
            
            if(goTurnText.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Vui lòng nhập tuyến đường lượt đi");
            goTurnText.requestFocus();
            return;
        }else if(backTurnText.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Vui lòng nhập tuyến đường lượt về");
            backTurnText.requestFocus();
            return;
        }else if(timeTravelText.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Vui lòng nhập thời gian di chuyển");
            timeTravelText.requestFocus();
            return;
        }else if(startPointText.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Vui lòng nhập điểm bắt đầu");
            timeTravelText.requestFocus();
            return;
        }else if(busStopNumText.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Vui lòng nhập số trạm");
            timeTravelText.requestFocus();
            return;
        }else if(breakTimeText.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Vui lòng nhập thời gian dãn cách");
            timeTravelText.requestFocus();
            return;
        }else if(costText.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Vui lòng nhập Chi phí");
            timeTravelText.requestFocus();
            return;
        }
        
        
        
        if(!validUnicodeVn(goTurnText.getText()))
        {
            JOptionPane.showMessageDialog(this, "Lượt đi chỉ được nhập ký tự và dấu phân cách \"-\"");
            return;
        }
        
        if(!validUnicodeVn(backTurnText.getText()))
        {
            JOptionPane.showMessageDialog(this, "Lượt đi chỉ được nhập ký tự và dấu phân cách \"-\"");
            return;
        }
        
        
        if(!isDigits(timeTravelText.getText()))
        {
            JOptionPane.showMessageDialog(this, "Thời gian di chuyển chỉ được nhập số (h)");
            return;
        }
        
        if(!validUnicodeVn(startPointText.getText()))
        {
            JOptionPane.showMessageDialog(this, "Điểm bắt đầu chỉ được nhập ký tự");
            return;
        }
        
        if(!isDigits(busStopNumText.getText()))
        {
            JOptionPane.showMessageDialog(this, "Số trạm chỉ được nhập số");
            return;
        }
        
        if(!isDigits(breakTimeText.getText()))
        {
            JOptionPane.showMessageDialog(this, "Thời gian giãn cách chỉ được nhập số (p)");
            return;
        }
        
        if(!isDigits(costText.getText()))
        {
            JOptionPane.showMessageDialog(this, "Chi phí chỉ được nhập số");
            return;
        }
            
            try{
                Connection connection = DBConnection.getConnection();
                String query= "UPDATE ROUTE SET go_turn=? , back_turn= ?, time_travel=?, start_point=?,bus_stop_num=?,time_break=?,gas_cost=? WHERE route_id="+data;
                PreparedStatement ps = connection.prepareStatement(query);
                ps.setString(1,goTurnText.getText());
                ps.setString(2,backTurnText.getText());
                ps.setString(3,timeTravelText.getText());
                ps.setString(4,startPointText.getText());
                ps.setString(5,busStopNumText.getText());
                ps.setString(6,breakTimeText.getText());
                ps.setString(7,costText.getText());
                
                ps.executeUpdate();
//                DefaultTableModel model=  (DefaultTableModel) tableMain.getModel();
//                model.setRowCount(0);
                showData();
                DBConnection.closeConnection(connection);
                
                JOptionPane.showMessageDialog(null, "Sửa thành công.");
                goTurnText.setText("");
                backTurnText.setText("");
                timeTravelText.setText("");
                startPointText.setText("");
                busStopNumText.setText("");
                breakTimeText.setText("");
                costText.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(QLChuyen.class.getName()).log(Level.SEVERE, null, ex);
            }
        
            jbtAdd.setEnabled(true);
        jbtDel.setEnabled(false);
        jbtFix.setEnabled(false);
        
    }//GEN-LAST:event_jbtFixActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        QLChuyen route = new QLChuyen();
                route.setVisible(true);
                route.setLocationRelativeTo(null);
               // System.out.println(this.infor);
               route.setInfor(this.infor);
               this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        QLVe qlc= new QLVe();
          qlc.setLocationRelativeTo(null);
               // System.out.println(this.infor);
               qlc.setInfor(this.infor);
                    qlc.setVisible(true);
                    this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        Statistic qlc= new Statistic();
        qlc.setLocationRelativeTo(null);
               // System.out.println(this.infor);
               qlc.setInfor(this.infor);
                    qlc.setVisible(true);
                    this.dispose();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        PhanCong qlc= new PhanCong();
        qlc.setLocationRelativeTo(null);
               // System.out.println(this.infor);
               qlc.setInfor(this.infor);
                    qlc.setVisible(true);
                    this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
           Login log = new Login();
                log.setVisible(true);
                log.setLocationRelativeTo(null);
                //System.out.println(this.infor);
               
              // System.out.println(bus.infor);
               this.dispose();  
    }//GEN-LAST:event_jButton9ActionPerformed

    private void btResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btResetActionPerformed
        
        goTurnText.setText("");
        backTurnText.setText("");
        timeTravelText.setText("");
        startPointText.setText("");
        busStopNumText.setText("");
        breakTimeText.setText("");
        costText.setText("");
        
        
        jbtDel.setEnabled(false);
        jbtFix.setEnabled(false);
        jbtAdd.setEnabled(true);
    }//GEN-LAST:event_btResetActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       EmployeeManagement emp = new EmployeeManagement();
                
                emp.setLocationRelativeTo(null);
               // System.out.println(this.infor);
               emp.setInfor(this.infor);
               emp.setVisible(true);
               this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       AccountManagement acc = new AccountManagement();
                
                acc.setLocationRelativeTo(null);
               // System.out.println(this.infor);
               acc.setInfor(this.infor);
               acc.setVisible(true);
               this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        BusManagement bus = new BusManagement();
                bus.setVisible(true);
                bus.setLocationRelativeTo(null);
               // System.out.println(this.infor);
               bus.setInfor(this.infor);
               this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void timeTravelTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_timeTravelTextKeyTyped
       
    }//GEN-LAST:event_timeTravelTextKeyTyped

    private void busStopNumTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_busStopNumTextKeyTyped

    }//GEN-LAST:event_busStopNumTextKeyTyped

    private void breakTimeTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_breakTimeTextKeyTyped
       
    }//GEN-LAST:event_breakTimeTextKeyTyped

    private void costTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_costTextKeyTyped

    }//GEN-LAST:event_costTextKeyTyped

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
                // TODO add your handling code here:
                 QLTime qlc= new QLTime();
         qlc.setLocationRelativeTo(null);
               // System.out.println(this.infor);
               qlc.setInfor(this.infor);
              qlc.setVisible(true);
              this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLChuyen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLChuyen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLChuyen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLChuyen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLChuyen().setVisible(true);
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField backTurnText;
    private javax.swing.JTextField breakTimeText;
    private javax.swing.JButton btReset;
    private javax.swing.JTextField busStopNumText;
    private javax.swing.JTextField costText;
    private javax.swing.JTextField goTurnText;
    private javax.swing.JTextPane inforText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbtAdd;
    private javax.swing.JButton jbtDel;
    private javax.swing.JButton jbtFix;
    private javax.swing.JTextField startPointText;
    private javax.swing.JTable tableMain;
    private javax.swing.JTextField timeTravelText;
    // End of variables declaration//GEN-END:variables
}
